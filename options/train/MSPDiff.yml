# general settings
name:  s0
model_type: MSPDIff
scale: 1
num_gpu: auto  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: PairedImageIRDataset
    dataroot_gt: D:\DataSet\PI_NLOS\train\gt
    dataroot_lq: D:\DataSet\PI_NLOS\train\s0
    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

    ### -------------Progressive training--------------------------
    mini_batch_sizes: [1,1,1,1,1,1]             # Batch size per gpu
    iters: [20000,20000,20000,20000,20000,200000]
    gt_size: 256  # Max patch size for progressive training
    gt_sizes: [256,256,256,256,256,256]  # Patch sizes for progressive training.
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: PairedImageIRDataset
#    dataroot_gt:  D:\DataSet\OT_cut\Carton256\test\sharp
#    dataroot_lq:  D:\DataSet\OT_cut\Carton256\test\blur
    dataroot_gt:  D:\DataSet\PI_NLOS\test\gt
    dataroot_lq:  D:\DataSet\PI_NLOS\test\s0
    filename_tmpl: '{}'
    io_backend:
      type: disk

# network structures


network_unet:
  type: SR3UNet
  in_channel: 6
  out_channel: 3
  inner_channel: 64
  norm_groups: 32
  channel_mults: [1,2,4,8,8]
  attn_res: [16]
  res_blocks: 2
  dropout: 0.2
  divide: 16

network_feature_extraction:
  type: GlobalCorrector
  normal01: true

network_ddpm:
  type: GaussianDiffusion
  image_size: 128
  channels: 3
  conditional: true
  color_limit: -1
  schedule_list: [1, 1, 2, 2]

ddpm_schedule:
  schedule: "linear"
  n_timestep: 2000
  linear_start: !!float 1e-6
  linear_end: !!float 1e-2

# path
path:
  pretrain_network_g:
  param_key_g: params
  strict_load_g: False
  resume_state:


  #ignore_resume_networks: ['network_identity']

# training settings
train:
  cs_on_shift: true
  vis_train: true
  vis_num: 150
  train_type: ddpm_cs_pyramid
  t_border: 1000
  input_mode: crop
  crop_size: [160, 160]
  optim_g:
    type: Adam
    lr: !!float 1e-4
  optim_d:
    type: Adam
    lr: !!float 2e-3
  optim_component:
    type: Adam
    lr: !!float 2e-3

  scheduler:
    type: MultiStepLR
    milestones: [50000, 75000, 100000, 150000, 200000,300000]
    gamma: 0.5

  total_iter: 900000
  warmup_iter: -1  # no warm up

# validation settings
val:
  split_log: true
  fix_seed: true
  color_gamma: 1.0
  use_up_v2: true
  schedule_list: [128, 128, 256, 256]
  ddim_eta: !!float 1.0
  ddim_timesteps: 4
  use_kind_align: false
  cal_all: true
  show_all: true
  val_freq: !!float 8000
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
#    ssim:
#      type: calculate_ssim_lol
#    lpips:
#      type: calculate_lpips_lol


# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 8000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true
